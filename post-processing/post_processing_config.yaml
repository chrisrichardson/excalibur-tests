# Plot title
title: Example Plot

# Axes must have a value specified with a perflog column name or a
# benchmark parameter name (denoted by a "%" in the perflog "info"
# and "display_name" fields, if it exists).
# Units can either be specified with a perflog column name
# or a custom label (including null (i.e. None) if units are N/A).
# Optional axis scaling can either be specified with a perflog column name
# (+ a series index and/or an x-axis value for filtering), or a custom value

x_axis:
  value: "tasks"
  units:
    custom: null

y_axis:
  value: "flops_value"
  units:
    column: "flops_unit"
  scaling:
    column:
      name: "flops_value"
      series: 0             # The series at index 0 is ["cpus_per_task", 1]
      x_value: 2            # Find the row where "tasks" is 2

# Optional row filters (specify an empty list [] if none are required).
# Filter format: [column_name, operator, value]
filters:
  and: [["system", "==", "default"]]
  or: []

# Optional setting to display several plots in the same graph.
# Number of series, if used, must be >=2 (specify an empty list [] if there is only one series).
# Do not use more than two distinct column names in this list -
# bokeh can only handle 3 x-axis groups (2 series columns + 1 x-axis column).
# NOTE: For now, only one distinct column name is supported.
# Series format: [column_name, value]
series: [["cpus_per_task", 1], ["cpus_per_task", 2]]

# All columns used in axes, filters, and series must have a user-specified type.
# Type refers to the pandas dtype each column should be interpreted as
# (e.g. str/string/object, int/int64, float/float64, datetime/datetime64).
column_types:
  tasks: "int"
  flops_value: "float"
  flops_unit: "str"
  system: "str"
  cpus_per_task: "int"

# Optional setting to specify additional columns to export to csv file, in addition to
# the ones in axes/series/filters
additional_columns_to_csv:
  ["spack_spec"]